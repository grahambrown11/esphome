{"version":3,"file":"c.b5c3700b.js","sources":["../../../../src/show-api-key/show-api-key-dialog.ts"],"sourcesContent":["import { LitElement, html, css, PropertyValues } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators.js\";\nimport \"@material/mwc-button\";\nimport \"@material/mwc-dialog\";\nimport { esphomeDialogStyles } from \"../styles\";\nimport { copyToClipboard } from \"../util/copy-clipboard\";\nimport { getConfigurationApiKey } from \"../api/configuration\";\n\n@customElement(\"esphome-show-api-key-dialog\")\nclass ESPHomeShowApiKeyDialogDialog extends LitElement {\n  @property() public configuration!: string;\n\n  @state() private _apiKey?: string | null;\n\n  @state() private _showCopied = false;\n\n  protected render() {\n    return html`\n      <mwc-dialog\n        open\n        heading=${`API key for ${this.configuration}`}\n        scrimClickAction\n        @closed=${this._handleClose}\n      >\n        ${this._apiKey === undefined\n          ? \"Loadingâ€¦\"\n          : this._apiKey === null\n          ? html`Unable to automatically extract API key. It may not be set.\n              Open the configuration and look for <code>api:</code>.`\n          : html`\n              <div class=\"key\" @click=${this._copyApiKey}>\n                <code>${this._apiKey}</code>\n                <mwc-button ?disabled=${this._showCopied}\n                  >${this._showCopied ? \"Copied!\" : \"Copy\"}</mwc-button\n                >\n              </div>\n            `}\n\n        <mwc-button\n          no-attention\n          slot=\"primaryAction\"\n          dialogAction=\"close\"\n          label=\"Close\"\n        ></mwc-button>\n      </mwc-dialog>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n\n    getConfigurationApiKey(this.configuration).then((key) => {\n      this._apiKey = key;\n    });\n  }\n\n  private _copyApiKey() {\n    copyToClipboard(this._apiKey!);\n    this._showCopied = true;\n    setTimeout(() => (this._showCopied = false), 2000);\n  }\n\n  private _handleClose() {\n    this.parentNode!.removeChild(this);\n  }\n\n  static styles = [\n    esphomeDialogStyles,\n    css`\n      .key {\n        position: relative;\n        display: flex;\n        align-items: center;\n      }\n      code {\n        word-break: break-all;\n      }\n      .key mwc-button {\n        margin-left: 16px;\n      }\n      .copied {\n        font-weight: bold;\n        color: var(--alert-success-color);\n\n        position: absolute;\n        background-color: var(--mdc-theme-surface, #fff);\n        padding: 10px;\n        right: 0;\n        font-size: 1.2em;\n      }\n    `,\n  ];\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"esphome-show-api-key-dialog\": ESPHomeShowApiKeyDialogDialog;\n  }\n}\n"],"names":["ESPHomeShowApiKeyDialogDialog","LitElement","constructor","this","_showCopied","render","html","configuration","_handleClose","undefined","_apiKey","_copyApiKey","firstUpdated","changedProps","super","getConfigurationApiKey","then","key","copyToClipboard","setTimeout","parentNode","removeChild","styles","esphomeDialogStyles","css","__decorate","property","prototype","state","customElement"],"mappings":"4JASA,IAAMA,EAAN,cAA4CC,EAA5CC,kCAKmBC,KAAWC,aAAG,CA8EhC,CA5EWC,SACR,OAAOC,CAAI;;;kBAGG,eAAeH,KAAKI;;kBAEpBJ,KAAKK;;eAEIC,IAAjBN,KAAKO,QACH,WACiB,OAAjBP,KAAKO,QACLJ,CAAI;sEAEJA,CAAI;wCACwBH,KAAKQ;wBACrBR,KAAKO;wCACWP,KAAKC;qBACxBD,KAAKC,YAAc,UAAY;;;;;;;;;;;;KAajD,CAESQ,aAAaC,GACrBC,MAAMF,aAAaC,GAEnBE,EAAuBZ,KAAKI,eAAeS,MAAMC,IAC/Cd,KAAKO,QAAUO,CAAG,GAErB,CAEON,cACNO,EAAgBf,KAAKO,SACrBP,KAAKC,aAAc,EACnBe,YAAW,IAAOhB,KAAKC,aAAc,GAAQ,IAC9C,CAEOI,eACNL,KAAKiB,WAAYC,YAAYlB,KAC9B,GAEMH,EAAAsB,OAAS,CACdC,EACAC,CAAG;;;;;;;;;;;;;;;;;;;;;;OA1DcC,EAAA,CAAlBC,KAAyC1B,EAAA2B,UAAA,qBAAA,GAEzBF,EAAA,CAAhBG,KAAwC5B,EAAA2B,UAAA,eAAA,GAExBF,EAAA,CAAhBG,KAAoC5B,EAAA2B,UAAA,mBAAA,GALjC3B,EAA6ByB,EAAA,CADlCI,EAAc,gCACT7B"}
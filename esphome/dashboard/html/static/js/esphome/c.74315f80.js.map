{"version":3,"file":"c.74315f80.js","sources":["../../../../src/api/secrets.ts","../../../../src/api/wifi.ts"],"sourcesContent":["import { APIBase, APIError, fetchApiJson } from \".\";\nimport { getFile, writeFile } from \"./files\";\n\nexport const SECRETS_FILE = \"secrets.yaml\";\n\nexport const getSecretKeys = async (): Promise<string[]> => {\n  try {\n    return await fetchApiJson(APIBase.resolvePath(\"/secret_keys\"));\n  } catch (err: any) {\n    if (err instanceof APIError && err.status === 404) {\n      return [];\n    }\n    throw err;\n  }\n};\n\nexport const appendSecrets = async (\n  secrets: Record<string, string>,\n  comment?: string\n): Promise<void> => {\n  let content = await getFile(SECRETS_FILE);\n  if (content === null) {\n    content = \"\";\n  }\n\n  let toAppend =\n    content.length === 0\n      ? \"\"\n      : content.charAt(content.length - 1) !== \"\\n\"\n      ? \"\\n\\n\"\n      : \"\\n\";\n\n  if (comment) {\n    toAppend += `# ${comment}\\n`;\n  }\n\n  for (const [key, value] of Object.entries(secrets)) {\n    toAppend += `${key}: ${JSON.stringify(value)}\\n`;\n  }\n\n  await writeFile(SECRETS_FILE, content + toAppend);\n};\n","import { appendSecrets, getSecretKeys } from \"./secrets\";\n\nexport const SECRET_WIFI_SSID = \"wifi_ssid\";\nexport const SECRET_WIFI_PASSWORD = \"wifi_password\";\n\nexport const checkHasWifiSecrets = async () => {\n  const secrets = await getSecretKeys();\n  return (\n    secrets.includes(SECRET_WIFI_SSID) && secrets.includes(SECRET_WIFI_PASSWORD)\n  );\n};\n\nexport const storeWifiSecrets = async (ssid: string, password: string) =>\n  appendSecrets(\n    {\n      [SECRET_WIFI_SSID]: ssid,\n      [SECRET_WIFI_PASSWORD]: password,\n    },\n    \"Your Wi-Fi SSID and password\"\n  );\n"],"names":["SECRETS_FILE","SECRET_WIFI_SSID","SECRET_WIFI_PASSWORD","checkHasWifiSecrets","async","secrets","fetchApiJson","APIBase","resolvePath","err","APIError","status","getSecretKeys","includes","storeWifiSecrets","ssid","password","comment","content","getFile","toAppend","length","charAt","key","value","Object","entries","JSON","stringify","writeFile","appendSecrets"],"mappings":"uEAGO,MAAMA,EAAe,eCDfC,EAAmB,YACnBC,EAAuB,gBAEvBC,EAAsBC,UACjC,MAAMC,ODDqBD,WAC3B,IACE,aAAaE,EAAaC,EAAQC,YAAY,gBAM/C,CALC,MAAOC,GACP,GAAIA,aAAeC,GAA2B,MAAfD,EAAIE,OACjC,MAAO,GAET,MAAMF,CACP,GCPqBG,GACtB,OACEP,EAAQQ,SAASZ,IAAqBI,EAAQQ,SAASX,EACvD,EAGSY,EAAmBV,MAAOW,EAAcC,IDIxBZ,OAC3BC,EACAY,KAEA,IAAIC,QAAgBC,EAAQnB,GACZ,OAAZkB,IACFA,EAAU,IAGZ,IAAIE,EACiB,IAAnBF,EAAQG,OACJ,GACuC,OAAvCH,EAAQI,OAAOJ,EAAQG,OAAS,GAChC,OACA,KAEFJ,IACFG,GAAY,KAAKH,OAGnB,IAAK,MAAOM,EAAKC,KAAUC,OAAOC,QAAQrB,GACxCe,GAAY,GAAGG,MAAQI,KAAKC,UAAUJ,aAGlCK,EAAU7B,EAAckB,EAAUE,EAAS,EC3BjDU,CACE,CACE7B,CAACA,GAAmBc,EACpBb,CAACA,GAAuBc,GAE1B"}